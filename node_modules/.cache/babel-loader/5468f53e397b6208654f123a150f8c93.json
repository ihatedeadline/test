{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\hw5-ihatedeadline\\\\review\\\\1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { guess, startGame, restart } from './axios';\n\nfunction App() {\n  _s();\n\n  const [hasStarted, setHasStarted] = useState(false);\n  const [hasWon, setHasWon] = useState(false);\n  const [number, setNumber] = useState('');\n  const [status, setStatus] = useState('');\n\n  const startMenu = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        await startGame();\n        setHasStarted(true);\n      },\n      children: \"start game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n\n  const game = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hasWon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"you won! the number was \", number, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          console.log('tt');\n          await restart();\n          console.log('tt');\n          setHasWon(false);\n          setStatus('');\n          setNumber('');\n        },\n        children: \"restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Guess a number between 1 to 100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: number,\n        onChange: e => setNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // TODO: use async/await to call guess(number),\n        // process the response to set the proper state values\n        onClick: async () => {\n          console.log(\"ggg\");\n          let msg = await guess(number);\n\n          if (msg === 'smaller') {\n            setStatus('answer is smaller than ' + String(number));\n          }\n\n          if (msg === 'bigger') {\n            setStatus('answer is bigger than ' + String(number));\n          }\n\n          if (msg === 'correct') {\n            setHasWon(true);\n          }\n        },\n        disabled: !number,\n        children: \"guess!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: hasStarted ? game : startMenu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"m6iN8AaM8opXCIQseQsX+n6MEYE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/hw5-ihatedeadline/review/1/src/App.js"],"names":["useState","guess","startGame","restart","App","hasStarted","setHasStarted","hasWon","setHasWon","number","setNumber","status","setStatus","startMenu","game","console","log","e","target","value","msg","String"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,SAA1C;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMa,SAAS,gBACb;AAAA,2BACE;AACE,MAAA,OAAO,EAAE,YAAY;AACnB,cAAMX,SAAS,EAAf;AACAI,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,QAAMQ,IAAI,gBACR;AAAA,cACGP,MAAM,gBACL;AAAA,8BACE;AAAA,+CAA4BE,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,YAAY;AACnBM,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,gBAAMb,OAAO,EAAb;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAR,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAI,UAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,UAAAA,SAAS,CAAC,EAAD,CAAT;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADK,gBAiBL;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAED,MADT;AAEE,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAF5B;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AACE;AACA;AACA,QAAA,OAAO,EAAE,YAAY;AACnBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,cAAII,GAAG,GAAG,MAAMnB,KAAK,CAACQ,MAAD,CAArB;;AACA,cAAIW,GAAG,KAAK,SAAZ,EAAuB;AACrBR,YAAAA,SAAS,CAAC,4BAA4BS,MAAM,CAACZ,MAAD,CAAnC,CAAT;AACD;;AACD,cAAIW,GAAG,KAAK,QAAZ,EAAsB;AACpBR,YAAAA,SAAS,CAAC,2BAA2BS,MAAM,CAACZ,MAAD,CAAlC,CAAT;AACD;;AACD,cAAIW,GAAG,KAAK,SAAZ,EAAuB;AACrBZ,YAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,SAfH;AAgBE,QAAA,QAAQ,EAAE,CAACC,MAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eA0BE;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,UADF;;AAmDA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBN,UAAU,GAAGS,IAAH,GAAUD;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAvEQT,G;;KAAAA,G;AAyET,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\r\nimport './App.css'\r\nimport { guess, startGame, restart } from './axios'\r\n\r\nfunction App() {\r\n  const [hasStarted, setHasStarted] = useState(false)\r\n  const [hasWon, setHasWon] = useState(false)\r\n  const [number, setNumber] = useState('')\r\n  const [status, setStatus] = useState('')\r\n\r\n  const startMenu = (\r\n    <div>\r\n      <button\r\n        onClick={async () => {\r\n          await startGame()\r\n          setHasStarted(true)\r\n        }}\r\n      >\r\n        start game\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n  const game = (\r\n    <div>\r\n      {hasWon ? (\r\n        <>\r\n          <p>you won! the number was {number}.</p>\r\n          <button\r\n            onClick={async () => {\r\n              console.log('tt')\r\n              await restart()\r\n              console.log('tt')\r\n              setHasWon(false)\r\n              setStatus('')\r\n              setNumber('')\r\n            }}\r\n          >\r\n            restart\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>Guess a number between 1 to 100</p>\r\n          <input\r\n            value={number}\r\n            onChange={(e) => setNumber(e.target.value)}\r\n          ></input>\r\n          <button\r\n            // TODO: use async/await to call guess(number),\r\n            // process the response to set the proper state values\r\n            onClick={async () => {\r\n              console.log(\"ggg\")\r\n              let msg = await guess(number)\r\n              if (msg === 'smaller') {\r\n                setStatus('answer is smaller than ' + String(number))\r\n              }\r\n              if (msg === 'bigger') {\r\n                setStatus('answer is bigger than ' + String(number))\r\n              }\r\n              if (msg === 'correct') {\r\n                setHasWon(true)\r\n              }\r\n            }}\r\n            disabled={!number}\r\n          >\r\n            guess!\r\n          </button>\r\n          <p>{status}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  return <div className=\"App\">{hasStarted ? game : startMenu}</div>\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}